using System.Collections.Generic;
namespace SystemInfo.Infrastructure.Tweaks
{
    public class Tweak
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public string ApplyScript { get; set; }
        public string UnapplyScript { get; set; }
        public bool HasUnapply => !string.IsNullOrEmpty(UnapplyScript);
    }

    public static class TweaksRepository
    {
        public static Dictionary<string, Tweak> AllTweaks = new Dictionary<string, Tweak>
        {
            ["align-taskbar-left"] = new Tweak
            {
                Name = "Align Taskbar Left",
                Description = "Aligns the taskbar to the left side of the screen.",
                ApplyScript = "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"TaskbarAl\" -Type DWord -Value 0\n",
                UnapplyScript = "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"TaskbarAl\" -Type DWord -Value 1\n"
            },
            ["debloat-windows"] = new Tweak
            {
                Name = "Debloat Windows",
                Description = "Removes Unnecessary Windows Features And Apps (RECOMMENDED)",
                ApplyScript = "& ([scriptblock]::Create((Invoke-RestMethod 'https://debloat.raphi.re/'))) `\n  -Silent `\n  -RemoveApps",
                UnapplyScript = null
            },
            ["detailed-bsod"] = new Tweak
            {
                Name = "Detailed Bsod",
                Description = "Adds detailed information to the Blue Screen of Death (BSOD) screen",
                ApplyScript = "Set-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\CrashControl\" -Name \"Value\" -Type DWord -Value 1\n",
                UnapplyScript = "Set-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\CrashControl\" -Name \"Value\" -Type DWord -Value 0\n"
            },
            ["disable-background-ms-store-apps"] = new Tweak
            {
                Name = "Disable Background Ms Store Apps",
                Description = "Disables Microsoft Store apps from running in the background (from ctt)",
                ApplyScript = "  $path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications\"\n  $name = \"GlobalUserDisabled\"\n  $newValue = 1\n  \n  # Ensure the key exists\n  If (-Not (Test-Path $path)) {\n      New-Item -Path $path -Force | Out-Null\n  }\n  \n  # Set the value\n  Set-ItemProperty -Path $path -Name $name -Type DWord -Value $newValue\n  \n  Write-Host \"$name set to $newValue (Background Access Disabled)\"",
                UnapplyScript = " $path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications\"\n  $name = \"GlobalUserDisabled\"\n  $originalValue = 0\n  \n  # Ensure the key exists\n  If (-Not (Test-Path $path)) {\n      New-Item -Path $path -Force | Out-Null\n  }\n  \n  # Revert the value\n  Set-ItemProperty -Path $path -Name $name -Type DWord -Value $originalValue\n  \n  Write-Host \"$name reverted to $originalValue (Background Access Restored)\" -ForegroundColor Yellow"
            },
            ["disable-copilot"] = new Tweak
            {
                Name = "Disable Copilot",
                Description = "Removes Microsoft's Copilot feature. (will fail if copilot is not installed)",
                ApplyScript = "Get-AppxPackage -AllUsers | Where-Object {$_.Name -Like '*Microsoft.Copilot*'} | Remove-AppxPackage -ErrorAction Continue",
                UnapplyScript = "winget install 9NHT9RB2F4HD --source msstore --accept-source-agreements --accept-package-agreements"
            },
            ["disable-core-isolation"] = new Tweak
            {
                Name = "Disable Core Isolation",
                Description = "Disables Core Isolation Memory Integrity to improve system performance",
                ApplyScript = "New-Item -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" -Force | Out-Null\n\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" `\n    -Name \"Enabled\" -Value 0 -Type DWord\n",
                UnapplyScript = "New-Item -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" -Force | Out-Null\n\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" `\n    -Name \"Enabled\" -Value 1 -Type DWord\n"
            },
            ["disable-defender-rtp"] = new Tweak
            {
                Name = "Disable Defender Rtp",
                Description = "Disables Defender Real-time Protection",
                ApplyScript = "Set-MpPreference -DisableRealtimeMonitoring $true",
                UnapplyScript = "Set-MpPreference -DisableRealtimeMonitoring $false"
            },
            ["disable-dynamic-ticking"] = new Tweak
            {
                Name = "Disable Dynamic Ticking",
                Description = "Improves system responsiveness and reduces latency by disabling dynamic timer ticks.",
                ApplyScript = "try {\n    bcdedit /set disabledynamictick yes\n    Write-Host \"Dynamic Ticking disabled successfully\"\n  } catch {\n    Write-Host \"Failed to apply Dynamic Ticking tweak\"\n  }",
                UnapplyScript = "try {\n    bcdedit /set disabledynamictick no\n    Write-Host \"Dynamic Ticking settings restored\"\n  } catch {\n    Write-Host \"Failed to revert Dynamic Ticking tweak\"\n  }"
            },
            ["disable-fast-startup"] = new Tweak
            {
                Name = "Disable Fast Startup",
                Description = "Disables Windows Fast Startup to improve system stability",
                ApplyScript = "Set-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Power' -Name HiberbootEnabled -Value 0",
                UnapplyScript = "Set-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Power' -Name HiberbootEnabled -Value 1"
            },
            ["disable-gamebar"] = new Tweak
            {
                Name = "Disable Gamebar",
                Description = "Disables The Xbox gamebar",
                ApplyScript = "try {\n    winget uninstall 9nzkpstsnw4p --silent --accept-source-agreements \n        Get-AppxPackage Microsoft.XboxGamingOverlay | Remove-AppxPackage -ErrorAction Stop\n      \n        Write-Output 'Successfully removed Xbox Gaming Overlay via AppxPackage'\n    }\n    catch {\n        Write-Output 'AppxPackage removal failed, trying to remove via winget'\n        try {\n            winget uninstall 9nzkpstsnw4p --silent --accept-source-agreements \n            Write-Output 'Successfully removed Xbox Gaming Overlay via winget'\n        }\n        catch {\n            Write-Output 'Winget uninstall failed'\n        }\n    }",
                UnapplyScript = "winget install 9NZKPSTSNW4P --source msstore --accept-source-agreements --accept-package-agreements"
            },
            ["disable-hibernation"] = new Tweak
            {
                Name = "Disable Hibernation",
                Description = "Disables the hibernation feature to free up disk space and improve shutdown speed",
                ApplyScript = "powercfg.exe /hibernate off",
                UnapplyScript = "powercfg.exe /hibernate on"
            },
            ["disable-location-tracking"] = new Tweak
            {
                Name = "Disable Location Tracking",
                Description = "Disables Windows location tracking.",
                ApplyScript = "  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection\" -Name \"Allow\" -Value \"Deny\" -Type String -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location\" -Name \"SensorPermissionState\" -Value 0 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\DiagTrack\" -Name \"Status\" -Value 0 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" -Name \"AutoUpdateEnabled\" -Value 0 -Type DWord -Force",
                UnapplyScript = "  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection\" -Name \"Allow\" -Value \"Allow\" -Type String -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location\" -Name \"SensorPermissionState\" -Value 1 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\DiagTrack\" -Name \"Status\" -Value 1 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" -Name \"AutoUpdateEnabled\" -Value 1 -Type DWord -Force"
            },
            ["disable-lockscreen-tips"] = new Tweak
            {
                Name = "Disable Lockscreen Tips",
                Description = "Disables tips on the lockscreen.",
                ApplyScript = "# Disable fun facts, tips, and more on the lock screen\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"RotatingLockScreenOverlayEnabled\" -Value 0 -Type DWord\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"SubscribedContent-338387Enabled\" -Value 0 -Type DWord\n",
                UnapplyScript = "# Enable fun facts, tips, and more on the lock screen\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"RotatingLockScreenOverlayEnabled\" -Value 1 -Type DWord\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"SubscribedContent-338387Enabled\" -Value 1 -Type DWord\n"
            },
            ["disable-mouse-acceleration"] = new Tweak
            {
                Name = "Disable Mouse Acceleration",
                Description = "Disables mouse acceleration for a more consistent and precise mouse movement experience. Great for gaming",
                ApplyScript = "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseSpeed\" -Value \"0\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold1\" -Value \"0\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold2\" -Value \"0\"\n",
                UnapplyScript = "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseSpeed\" -Value \"1\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold1\" -Value \"6\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold2\" -Value \"10\"\n"
            },
            ["disable-wifi-sense"] = new Tweak
            {
                Name = "Disable Wifi Sense",
                Description = "Disables Wifi Sense to prevent sharing of Wi-Fi networks with contacts",
                ApplyScript = "  Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting\" -Name \"Value\" -Type DWord -Value 0\n  Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots\" -Name \"Value\" -Type DWord -Value 0",
                UnapplyScript = "Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting\" -Name \"Value\" -Type DWord -Value 1\nSet-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots\" -Name \"Value\" -Type DWord -Value 1"
            },
            ["enable-dark-mode"] = new Tweak
            {
                Name = "Enable Dark Mode",
                Description = "Enables dark mode for Windows. Great for unactivated systems.",
                ApplyScript = "$Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\"\nSet-ItemProperty -Path $Path -Name AppsUseLightTheme -Value 0\nSet-ItemProperty -Path $Path -Name SystemUsesLightTheme -Value 0\nStop-Process -Name explorer -Force\nStart-Process explorer.exe\n",
                UnapplyScript = "$Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\"\nSet-ItemProperty -Path $Path -Name AppsUseLightTheme -Value 1\nSet-ItemProperty -Path $Path -Name SystemUsesLightTheme -Value 1\nStop-Process -Name explorer -Force\nStart-Process explorer.exe\n"
            },
            ["enable-end-task-right-click"] = new Tweak
            {
                Name = "Enable End Task Right Click",
                Description = "Enables the \"End Task\" option in the taskbar context menu",
                ApplyScript = "$regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n$valueName = \"TaskbarEndTask\"\n\nif (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $valueName -Type DWord -Value 1",
                UnapplyScript = "$regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n$valueName = \"TaskbarEndTask\"\n\nif (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $valueName -Type DWord -Value 0"
            },
            ["enable-hpet"] = new Tweak
            {
                Name = "Enable Hpet",
                Description = "Forces use of the High Precision Event Timer (HPET), which can reduce stuttering and improve timing accuracy on some hardware.",
                ApplyScript = "try {\n    bcdedit /set useplatformclock true\n    Write-Host \"HPET enabled successfully\"\n  } catch {\n    Write-Host \"Failed to enable HPET\"\n  }",
                UnapplyScript = "try {\n    bcdedit /deletevalue useplatformclock\n    Write-Host \"HPET setting removed\"\n  } catch {\n    Write-Host \"Failed to disable HPET\"\n  }"
            },
            ["optimize-network-settings"] = new Tweak
            {
                Name = "Optimize Network Settings",
                Description = "Changes various Windows settings to improve network latency and speeds.",
                ApplyScript = "      Write-Host \"Applying network tweaks...\"\n      netsh int tcp set heuristics disabled\n      netsh int tcp set supp internet congestionprovider=ctcp\n      netsh int tcp set global rss=enabled\n      netsh int tcp set global chimney=enabled\n      netsh int tcp set global ecncapability=enabled\n      netsh int tcp set global timestamps=disabled\n      netsh int tcp set global initialRto=2000\n      netsh int tcp set global rsc=disabled\n      netsh int tcp set global nonsackttresiliency=disabled\n      netsh int tcp set global MaxSynRetransmissions=2\n      netsh int tcp set global fastopen=enabled\n      netsh int tcp set global fastopenfallback=enabled\n      netsh int tcp set global pacingprofile=off\n      netsh int tcp set global hystart=disabled\n      netsh int tcp set global dca=enabled\n      netsh int tcp set global netdma=enabled\n      netsh int 6to4 set state state=enabled\n      netsh int udp set global uro=enabled\n      netsh winsock set autotuning on\n      netsh int tcp set supplemental template=custom icw=10\n      netsh interface teredo set state enterprise\n      netsh int tcp set security mpp=disabled\n      netsh int tcp set security profiles=disabled\n      netsh interface ipv4 set subinterface \"Wi-Fi\" mtu=1500 store=persistent\n      netsh interface ipv4 set subinterface Ethernet mtu=1500 store=persistent\n  \n      Write-Host \"Network tweaks applied.\"    ",
                UnapplyScript = " Write-Host \"Reverting network tweaks to defaults...\"\n      netsh int tcp set heuristics enabled\n      netsh int tcp set supp internet congestionprovider=default\n      netsh int tcp set global rss=disabled\n      netsh int tcp set global chimney=disabled\n      netsh int tcp set global ecncapability=disabled\n      netsh int tcp set global timestamps=enabled\n      netsh int tcp set global initialRto=3000\n      netsh int tcp set global rsc=enabled\n      netsh int tcp set global nonsackttresiliency=enabled\n      netsh int tcp set global MaxSynRetransmissions=5\n      netsh int tcp set global fastopen=disabled\n      netsh int tcp set global fastopenfallback=disabled\n      netsh int tcp set global pacingprofile=normal\n      netsh int tcp set global hystart=enabled\n      netsh int tcp set global dca=disabled\n      netsh int tcp set global netdma=disabled\n      netsh int 6to4 set state state=disabled\n      netsh int udp set global uro=disabled\n      netsh winsock set autotuning default\n      netsh int tcp set supplemental template=default icw=4\n      netsh interface teredo set state disabled\n      netsh int tcp set security mpp=enabled\n      netsh int tcp set security profiles=enabled\n      # Reset MTU to default (usually 1500 is default, so you might omit this or adjust)\n      netsh interface ipv4 set subinterface \"Wi-Fi\" mtu=1500 store=persistent\n      netsh interface ipv4 set subinterface Ethernet mtu=1500 store=persistent\n      Write-Host \"Network tweaks reverted.\""
            },
            ["optimize-nvidia-settings"] = new Tweak
            {
                Name = "Optimize Nvidia Settings",
                Description = "Changes Nvidia Control Panel settings to improve performance",
                ApplyScript = "",
                UnapplyScript = null
            },
            ["remove-gaming-apps"] = new Tweak
            {
                Name = "Remove Gaming Apps",
                Description = "Removes Xbox app, Xbox Game Bar, and Xbox Game Overlay",
                ApplyScript = "$appsList = 'Microsoft.GamingApp', 'Microsoft.XboxGameOverlay', 'Microsoft.XboxGamingOverlay'\n\nforeach ($app in $appsList) {\n    Get-AppxPackage -Name $app -AllUsers | Remove-AppxPackage\n    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -EQ $app | Remove-AppxProvisionedPackage -Online\n}\n",
                UnapplyScript = null
            },
            ["remove-onedrive"] = new Tweak
            {
                Name = "Remove Onedrive",
                Description = "Removes OneDrive from the system",
                ApplyScript = "$OneDrivePath = $($env:OneDrive)\n        Write-Host \"Removing OneDrive\"\n        $regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\OneDriveSetup.exe\"\n        if (Test-Path $regPath) {\n            $OneDriveUninstallString = Get-ItemPropertyValue \"$regPath\" -Name \"UninstallString\"\n            $OneDriveExe, $OneDriveArgs = $OneDriveUninstallString.Split(\" \")\n            Start-Process -FilePath $OneDriveExe -ArgumentList \"$OneDriveArgs /silent\" -NoNewWindow -Wait\n        } else {\n            Write-Host \"Onedrive dosn't seem to be installed anymore\" -ForegroundColor Red\n            return\n        }\n        # Check if OneDrive got Uninstalled\n        if (-not (Test-Path $regPath)) {\n        Write-Host \"Copy downloaded Files from the OneDrive Folder to Root UserProfile\"\n        Start-Process -FilePath powershell -ArgumentList \"robocopy '$($OneDrivePath)' '$($env:USERPROFILE.TrimEnd())\\' /mov /e /xj\" -NoNewWindow -Wait\n  \n        Write-Host \"Removing OneDrive leftovers\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\Microsoft\\OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:programdata\\Microsoft OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:systemdrive\\OneDriveTemp\"\n        reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\OneDrive\" -f\n        # check if directory is empty before removing:\n        If ((Get-ChildItem \"$OneDrivePath\" -Recurse | Measure-Object).Count -eq 0) {\n            Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$OneDrivePath\"\n        }\n  \n        Write-Host \"Remove Onedrive from explorer sidebar\"\n        Set-ItemProperty -Path \"HKCR:\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n        Set-ItemProperty -Path \"HKCR:\\Wow6432Node\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n  \n        Write-Host \"Removing run hook for new users\"\n        reg load \"hku\\Default\" \"C:\\Users\\Default\\NTUSER.DAT\"\n        reg delete \"HKEY_USERS\\Default\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /v \"OneDriveSetup\" /f\n        reg unload \"hku\\Default\"\n  \n        Write-Host \"Removing startmenu entry\"\n        Remove-Item -Force -ErrorAction SilentlyContinue \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\OneDrive.lnk\"\n  \n        Write-Host \"Removing scheduled task\"\n        Get-ScheduledTask -TaskPath '\\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false\n  \n        # Add Shell folders restoring default locations\n        Write-Host \"Shell Fixing\"\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"AppData\" -Value \"$env:userprofile\\AppData\\Roaming\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cache\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCache\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cookies\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCookies\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Favorites\" -Value \"$env:userprofile\\Favorites\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"History\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\History\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Local AppData\" -Value \"$env:userprofile\\AppData\\Local\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Music\" -Value \"$env:userprofile\\Music\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Video\" -Value \"$env:userprofile\\Videos\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"NetHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"PrintHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Printer Shortcuts\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Programs\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Recent\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Recent\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"SendTo\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\SendTo\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Start Menu\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Startup\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Templates\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Templates\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{374DE290-123F-4565-9164-39C4925E467B}\" -Value \"$env:userprofile\\Downloads\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Desktop\" -Value \"$env:userprofile\\Desktop\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Pictures\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Personal\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{F42EE2D3-909F-4907-8871-4C22FC0BF756}\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{0DDD015D-B06C-45D5-8C4C-F59713854639}\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n        Write-Host \"Restarting explorer\"\n        taskkill.exe /F /IM \"explorer.exe\"\n        Start-Process \"explorer.exe\"\n  \n        Write-Host \"Waiting for explorer to complete loading\"\n        Write-Host \"Please Note - The OneDrive folder at $OneDrivePath may still have items in it. You must manually delete it, but all the files should already be copied to the base user folder.\"\n        Write-Host \"If there are Files missing afterwards, please Login to Onedrive.com and Download them manually\" -ForegroundColor Yellow\n        Start-Sleep 5\n        } else {\n        Write-Host \"Something went Wrong during the Unistallation of OneDrive\" -ForegroundColor Red\n        }",
                UnapplyScript = "Write-Host \"Install OneDrive\"\nStart-Process -FilePath winget -ArgumentList \"install -e --accept-source-agreements --accept-package-agreements --silent Microsoft.OneDrive \" -NoNewWindow -Wait"
            },
            ["revert-context-menu"] = new Tweak
            {
                Name = "Revert Context Menu",
                Description = "Reverts the context menu to the default Windows 10 context menu.",
                ApplyScript = "New-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Name \"InprocServer32\" -force -value \"\"\nStop-Process -Name \"explorer\" -Force\nStart-Process \"explorer.exe\"",
                UnapplyScript = "Remove-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Recurse -Confirm:$false -Force\nStop-Process -Name \"explorer\" -Force\nStart-Process \"explorer.exe\""
            },
            ["run-disk-cleanup"] = new Tweak
            {
                Name = "Run Disk Cleanup",
                Description = "Runs disk cleanup on your C: drive. also removes old windows update cache",
                ApplyScript = "cleanmgr.exe /d C: /VERYLOWDISK\nDism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase",
                UnapplyScript = null
            },
            ["set-services-to-manual"] = new Tweak
            {
                Name = "Set Services To Manual",
                Description = "Sets various Windows services to Manual startup type to improve performance.",
                ApplyScript = "      $services = @(\n      @{ Name = \"AJRouter\"; StartupType = \"Disabled\" },\n      @{ Name = \"ALG\"; StartupType = \"Manual\" },\n      @{ Name = \"AppIDSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AppMgmt\"; StartupType = \"Manual\" },\n      @{ Name = \"AppReadiness\"; StartupType = \"Manual\" },\n      @{ Name = \"AppVClient\"; StartupType = \"Disabled\" },\n      @{ Name = \"AppXSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Appinfo\"; StartupType = \"Manual\" },\n      @{ Name = \"AssignedAccessManagerSvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"AudioEndpointBuilder\"; StartupType = \"Automatic\" },\n      @{ Name = \"AudioSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"Audiosrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"AxInstSV\"; StartupType = \"Manual\" },\n      @{ Name = \"BDESVC\"; StartupType = \"Manual\" },\n      @{ Name = \"BFE\"; StartupType = \"Automatic\" },\n      @{ Name = \"BITS\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"BTAGService\"; StartupType = \"Manual\" },\n      @{ Name = \"BcastDVRUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BluetoothUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BrokerInfrastructure\"; StartupType = \"Automatic\" },\n      @{ Name = \"Browser\"; StartupType = \"Manual\" },\n      @{ Name = \"BthAvctpSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"BthHFSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"CDPUserSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"COMSysApp\"; StartupType = \"Manual\" },\n      @{ Name = \"CaptureService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CertPropSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ClipSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"ConsentUxUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CoreMessagingRegistrar\"; StartupType = \"Automatic\" },\n      @{ Name = \"CredentialEnrollmentManagerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CryptSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CscService\"; StartupType = \"Manual\" },\n      @{ Name = \"DPS\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcomLaunch\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DevQueryBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationBrokerSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationService\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicePickerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicesFlowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"Dhcp\"; StartupType = \"Automatic\" },\n      @{ Name = \"DiagTrack\"; StartupType = \"Disabled\" },\n      @{ Name = \"DialogBlockingService\"; StartupType = \"Disabled\" },\n      @{ Name = \"DispBrokerDesktopSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DisplayEnhancementService\"; StartupType = \"Manual\" },\n      @{ Name = \"DmEnrollmentSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Dnscache\"; StartupType = \"Automatic\" },\n      @{ Name = \"DoSvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"DsSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DsmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DusmSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"EFS\"; StartupType = \"Manual\" },\n      @{ Name = \"EapHost\"; StartupType = \"Manual\" },\n      @{ Name = \"EntAppSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"EventLog\"; StartupType = \"Automatic\" },\n      @{ Name = \"EventSystem\"; StartupType = \"Automatic\" },\n      @{ Name = \"FDResPub\"; StartupType = \"Manual\" },\n      @{ Name = \"Fax\"; StartupType = \"Manual\" },\n      @{ Name = \"FontCache\"; StartupType = \"Automatic\" },\n      @{ Name = \"FrameServer\"; StartupType = \"Manual\" },\n      @{ Name = \"FrameServerMonitor\"; StartupType = \"Manual\" },\n      @{ Name = \"GraphicsPerfSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupListener\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupProvider\"; StartupType = \"Manual\" },\n      @{ Name = \"HvHost\"; StartupType = \"Manual\" },\n      @{ Name = \"IEEtwCollectorService\"; StartupType = \"Manual\" },\n      @{ Name = \"IKEEXT\"; StartupType = \"Manual\" },\n      @{ Name = \"InstallService\"; StartupType = \"Manual\" },\n      @{ Name = \"InventorySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"IpxlatCfgSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"KeyIso\"; StartupType = \"Automatic\" },\n      @{ Name = \"KtmRm\"; StartupType = \"Manual\" },\n      @{ Name = \"LSM\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanServer\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanWorkstation\"; StartupType = \"Automatic\" },\n      @{ Name = \"LicenseManager\"; StartupType = \"Manual\" },\n      @{ Name = \"LxpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MSDTC\"; StartupType = \"Manual\" },\n      @{ Name = \"MSiSCSI\"; StartupType = \"Manual\" },\n      @{ Name = \"MapsBroker\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"McpManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"MessagingService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"MicrosoftEdgeElevationService\"; StartupType = \"Manual\" },\n      @{ Name = \"MixedRealityOpenXRSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MpsSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"MsKeyboardFilter\"; StartupType = \"Manual\" },\n      @{ Name = \"NPSMSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"NaturalAuthentication\"; StartupType = \"Manual\" },\n      @{ Name = \"NcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NcbService\"; StartupType = \"Manual\" },\n      @{ Name = \"NcdAutoSetup\"; StartupType = \"Manual\" },\n      @{ Name = \"NetSetupSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NetTcpPortSharing\"; StartupType = \"Disabled\" },\n      @{ Name = \"Netlogon\"; StartupType = \"Automatic\" },\n      @{ Name = \"Netman\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcCtnrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NlaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"OneSyncSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"P9RdrService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPAutoReg\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PeerDistSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PenService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PerfHost\"; StartupType = \"Manual\" },\n      @{ Name = \"PhoneSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PimIndexMaintenanceSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PlugPlay\"; StartupType = \"Manual\" },\n      @{ Name = \"PolicyAgent\"; StartupType = \"Manual\" },\n      @{ Name = \"Power\"; StartupType = \"Automatic\" },\n      @{ Name = \"PrintNotify\"; StartupType = \"Manual\" },\n      @{ Name = \"PrintWorkflowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"ProfSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PushToInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"QWAVE\"; StartupType = \"Manual\" },\n      @{ Name = \"RasAuto\"; StartupType = \"Manual\" },\n      @{ Name = \"RasMan\"; StartupType = \"Manual\" },\n      @{ Name = \"RemoteAccess\"; StartupType = \"Disabled\" },\n      @{ Name = \"RemoteRegistry\"; StartupType = \"Disabled\" },\n      @{ Name = \"RetailDemo\"; StartupType = \"Manual\" },\n      @{ Name = \"RmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcEptMapper\"; StartupType = \"Automatic\" },\n      @{ Name = \"RpcLocator\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"SCPolicySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SCardSvr\"; StartupType = \"Manual\" },\n      @{ Name = \"SDRSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"SEMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SENS\"; StartupType = \"Automatic\" },\n      @{ Name = \"SNMPTRAP\"; StartupType = \"Manual\" },\n      @{ Name = \"SNMPTrap\"; StartupType = \"Manual\" },\n      @{ Name = \"SSDPSRV\"; StartupType = \"Manual\" },\n      @{ Name = \"SamSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"ScDeviceEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"Schedule\"; StartupType = \"Automatic\" },\n      @{ Name = \"SecurityHealthService\"; StartupType = \"Manual\" },\n      @{ Name = \"Sense\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorDataService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SessionEnv\"; StartupType = \"Manual\" },\n      @{ Name = \"SgrmBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"SharedAccess\"; StartupType = \"Manual\" },\n      @{ Name = \"SharedRealitySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ShellHWDetection\"; StartupType = \"Automatic\" },\n      @{ Name = \"SmsRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"Spooler\"; StartupType = \"Automatic\" },\n      @{ Name = \"SstpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StateRepository\"; StartupType = \"Manual\" },\n      @{ Name = \"StiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StorSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SysMain\"; StartupType = \"Automatic\" },\n      @{ Name = \"SystemEventsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"TabletInputService\"; StartupType = \"Manual\" },\n      @{ Name = \"TapiSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"TermService\"; StartupType = \"Automatic\" },\n      @{ Name = \"TextInputManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"Themes\"; StartupType = \"Automatic\" },\n      @{ Name = \"TieringEngineService\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBrokerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TokenBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TrkWks\"; StartupType = \"Automatic\" },\n      @{ Name = \"TroubleshootingSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TrustedInstaller\"; StartupType = \"Manual\" },\n      @{ Name = \"UI0Detect\"; StartupType = \"Manual\" },\n      @{ Name = \"UdkUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UevAgentService\"; StartupType = \"Disabled\" },\n      @{ Name = \"UmRdpService\"; StartupType = \"Manual\" },\n      @{ Name = \"UnistoreSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserDataSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserManager\"; StartupType = \"Automatic\" },\n      @{ Name = \"UsoSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VGAuthService\"; StartupType = \"Automatic\" },\n      @{ Name = \"VMTools\"; StartupType = \"Automatic\" },\n      @{ Name = \"VSS\"; StartupType = \"Manual\" },\n      @{ Name = \"VacSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VaultSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"W32Time\"; StartupType = \"Manual\" },\n      @{ Name = \"WEPHOSTSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"WFDSConMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WMPNetworkSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WManSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WPDBusEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"WSService\"; StartupType = \"Manual\" },\n      @{ Name = \"WSearch\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"WaaSMedicSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WalletService\"; StartupType = \"Manual\" },\n      @{ Name = \"WarpJITSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WbioSrvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Wcmsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WcsPlugInService\"; StartupType = \"Manual\" },\n      @{ Name = \"WdNisSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiServiceHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiSystemHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WebClient\"; StartupType = \"Manual\" },\n      @{ Name = \"Wecsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WiaRpc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinDefend\"; StartupType = \"Automatic\" },\n      @{ Name = \"WinHttpAutoProxySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinRM\"; StartupType = \"Manual\" },\n      @{ Name = \"Winmgmt\"; StartupType = \"Automatic\" },\n      @{ Name = \"WlanSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpcMonSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnService\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnUserService_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"XblAuthManager\"; StartupType = \"Manual\" },\n      @{ Name = \"XblGameSave\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxGipSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxNetApiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"autotimesvc\"; StartupType = \"Manual\" },\n      @{ Name = \"bthserv\"; StartupType = \"Manual\" },\n      @{ Name = \"camsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"cbdhsvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"cloudidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dcsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"defragsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"diagnosticshub.standardcollector.service\"; StartupType = \"Manual\" },\n      @{ Name = \"diagsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dmwappushservice\"; StartupType = \"Manual\" },\n      @{ Name = \"dot3svc\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdate\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdatem\"; StartupType = \"Manual\" },\n      @{ Name = \"embeddedmode\"; StartupType = \"Manual\" },\n      @{ Name = \"fdPHost\"; StartupType = \"Manual\" },\n      @{ Name = \"fhsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"gpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"hidserv\"; StartupType = \"Manual\" },\n      @{ Name = \"icssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"iphlpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"lfsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lltdsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lmhosts\"; StartupType = \"Manual\" },\n      @{ Name = \"mpssvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"msiserver\"; StartupType = \"Manual\" },\n      @{ Name = \"netprofm\"; StartupType = \"Manual\" },\n      @{ Name = \"nsi\"; StartupType = \"Automatic\" },\n      @{ Name = \"p2pimsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"p2psvc\"; StartupType = \"Manual\" },\n      @{ Name = \"perceptionsimulation\"; StartupType = \"Manual\" },\n      @{ Name = \"pla\"; StartupType = \"Manual\" },\n      @{ Name = \"seclogon\"; StartupType = \"Manual\" },\n      @{ Name = \"shpamsvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"smphost\"; StartupType = \"Manual\" },\n      @{ Name = \"spectrum\"; StartupType = \"Manual\" },\n      @{ Name = \"sppsvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"ssh-agent\"; StartupType = \"Disabled\" },\n      @{ Name = \"svsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"swprv\"; StartupType = \"Manual\" },\n      @{ Name = \"tiledatamodelsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"tzautoupdate\"; StartupType = \"Disabled\" },\n      @{ Name = \"uhssvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"upnphost\"; StartupType = \"Manual\" },\n      @{ Name = \"vds\"; StartupType = \"Manual\" },\n      @{ Name = \"vm3dservice\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicguestinterface\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicheartbeat\"; StartupType = \"Manual\" },\n      @{ Name = \"vmickvpexchange\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicrdv\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicshutdown\"; StartupType = \"Manual\" },\n      @{ Name = \"vmictimesync\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvmsession\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvss\"; StartupType = \"Manual\" },\n      @{ Name = \"vmvss\"; StartupType = \"Manual\" },\n      @{ Name = \"wbengine\"; StartupType = \"Manual\" },\n      @{ Name = \"wcncsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefusersvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"wercplsupport\"; StartupType = \"Manual\" },\n      @{ Name = \"wisvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlpasvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wmiApSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"workfolderssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wscsvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"wuauserv\"; StartupType = \"Manual\" },\n      @{ Name = \"wudfsvc\"; StartupType = \"Manual\" }\n  )\n\n  foreach ($svc in $services) {\n    try {\n        Set-Service -Name $svc.Name -StartupType $svc.StartupType -ErrorAction Stop\n        Write-Output \"Set $($svc.Name) to $($svc.StartupType)\"\n    } catch {\n        Write-Warning \"Failed to set $($svc.Name): $_\"\n    }\n}",
                UnapplyScript = "$services = @(\n      @{ Name = \"AJRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"ALG\"; StartupType = \"Manual\" },\n      @{ Name = \"AppIDSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AppMgmt\"; StartupType = \"Manual\" },\n      @{ Name = \"AppReadiness\"; StartupType = \"Manual\" },\n      @{ Name = \"AppVClient\"; StartupType = \"Disabled\" },\n      @{ Name = \"AppXSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Appinfo\"; StartupType = \"Manual\" },\n      @{ Name = \"AssignedAccessManagerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AudioEndpointBuilder\"; StartupType = \"Automatic\" },\n      @{ Name = \"AudioSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"Audiosrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"AxInstSV\"; StartupType = \"Manual\" },\n      @{ Name = \"BDESVC\"; StartupType = \"Manual\" },\n      @{ Name = \"BFE\"; StartupType = \"Automatic\" },\n      @{ Name = \"BITS\"; StartupType = \"Automatic\" },\n      @{ Name = \"BTAGService\"; StartupType = \"Manual\" },\n      @{ Name = \"BcastDVRUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BluetoothUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BrokerInfrastructure\"; StartupType = \"Automatic\" },\n      @{ Name = \"Browser\"; StartupType = \"Manual\" },\n      @{ Name = \"BthAvctpSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"BthHFSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPUserSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"COMSysApp\"; StartupType = \"Manual\" },\n      @{ Name = \"CaptureService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CertPropSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ClipSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"ConsentUxUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CoreMessagingRegistrar\"; StartupType = \"Automatic\" },\n      @{ Name = \"CredentialEnrollmentManagerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CryptSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CscService\"; StartupType = \"Manual\" },\n      @{ Name = \"DPS\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcomLaunch\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DevQueryBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationBrokerSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationService\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicePickerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicesFlowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"Dhcp\"; StartupType = \"Automatic\" },\n      @{ Name = \"DiagTrack\"; StartupType = \"Automatic\" },\n      @{ Name = \"DialogBlockingService\"; StartupType = \"Disabled\" },\n      @{ Name = \"DispBrokerDesktopSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DisplayEnhancementService\"; StartupType = \"Manual\" },\n      @{ Name = \"DmEnrollmentSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Dnscache\"; StartupType = \"Automatic\" },\n      @{ Name = \"DoSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DsSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DsmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DusmSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"EFS\"; StartupType = \"Manual\" },\n      @{ Name = \"EapHost\"; StartupType = \"Manual\" },\n      @{ Name = \"EntAppSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"EventLog\"; StartupType = \"Automatic\" },\n      @{ Name = \"EventSystem\"; StartupType = \"Automatic\" },\n      @{ Name = \"FDResPub\"; StartupType = \"Manual\" },\n      @{ Name = \"Fax\"; StartupType = \"Manual\" },\n      @{ Name = \"FontCache\"; StartupType = \"Automatic\" },\n      @{ Name = \"FrameServer\"; StartupType = \"Manual\" },\n      @{ Name = \"FrameServerMonitor\"; StartupType = \"Manual\" },\n      @{ Name = \"GraphicsPerfSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupListener\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupProvider\"; StartupType = \"Manual\" },\n      @{ Name = \"HvHost\"; StartupType = \"Manual\" },\n      @{ Name = \"IEEtwCollectorService\"; StartupType = \"Manual\" },\n      @{ Name = \"IKEEXT\"; StartupType = \"Manual\" },\n      @{ Name = \"InstallService\"; StartupType = \"Manual\" },\n      @{ Name = \"InventorySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"IpxlatCfgSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"KeyIso\"; StartupType = \"Automatic\" },\n      @{ Name = \"KtmRm\"; StartupType = \"Manual\" },\n      @{ Name = \"LSM\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanServer\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanWorkstation\"; StartupType = \"Automatic\" },\n      @{ Name = \"LicenseManager\"; StartupType = \"Manual\" },\n      @{ Name = \"LxpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MSDTC\"; StartupType = \"Manual\" },\n      @{ Name = \"MSiSCSI\"; StartupType = \"Manual\" },\n      @{ Name = \"MapsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"McpManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"MessagingService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"MicrosoftEdgeElevationService\"; StartupType = \"Manual\" },\n      @{ Name = \"MixedRealityOpenXRSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MpsSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"MsKeyboardFilter\"; StartupType = \"Disabled\" },\n      @{ Name = \"NPSMSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"NaturalAuthentication\"; StartupType = \"Manual\" },\n      @{ Name = \"NcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NcbService\"; StartupType = \"Manual\" },\n      @{ Name = \"NcdAutoSetup\"; StartupType = \"Manual\" },\n      @{ Name = \"NetSetupSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NetTcpPortSharing\"; StartupType = \"Disabled\" },\n      @{ Name = \"Netlogon\"; StartupType = \"Automatic\" },\n      @{ Name = \"Netman\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcCtnrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NlaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"OneSyncSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"P9RdrService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPAutoReg\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PcaSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PeerDistSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PenService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PerfHost\"; StartupType = \"Manual\" },\n      @{ Name = \"PhoneSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PimIndexMaintenanceSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PlugPlay\"; StartupType = \"Manual\" },\n      @{ Name = \"PolicyAgent\"; StartupType = \"Manual\" },\n      @{ Name = \"Power\"; StartupType = \"Automatic\" },\n      @{ Name = \"PrintNotify\"; StartupType = \"Manual\" },\n      @{ Name = \"PrintWorkflowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"ProfSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PushToInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"QWAVE\"; StartupType = \"Manual\" },\n      @{ Name = \"RasAuto\"; StartupType = \"Manual\" },\n      @{ Name = \"RasMan\"; StartupType = \"Manual\" },\n      @{ Name = \"RemoteAccess\"; StartupType = \"Disabled\" },\n      @{ Name = \"RemoteRegistry\"; StartupType = \"Disabled\" },\n      @{ Name = \"RetailDemo\"; StartupType = \"Manual\" },\n      @{ Name = \"RmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcEptMapper\"; StartupType = \"Automatic\" },\n      @{ Name = \"RpcLocator\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"SCPolicySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SCardSvr\"; StartupType = \"Manual\" },\n      @{ Name = \"SDRSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"SEMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SENS\"; StartupType = \"Automatic\" },\n      @{ Name = \"SNMPTRAP\"; StartupType = \"Manual\" },\n      @{ Name = \"SNMPTrap\"; StartupType = \"Manual\" },\n      @{ Name = \"SSDPSRV\"; StartupType = \"Manual\" },\n      @{ Name = \"SamSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"ScDeviceEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"Schedule\"; StartupType = \"Automatic\" },\n      @{ Name = \"SecurityHealthService\"; StartupType = \"Manual\" },\n      @{ Name = \"Sense\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorDataService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SessionEnv\"; StartupType = \"Manual\" },\n      @{ Name = \"SgrmBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"SharedAccess\"; StartupType = \"Manual\" },\n      @{ Name = \"SharedRealitySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ShellHWDetection\"; StartupType = \"Automatic\" },\n      @{ Name = \"SmsRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"Spooler\"; StartupType = \"Automatic\" },\n      @{ Name = \"SstpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StateRepository\"; StartupType = \"Automatic\" },\n      @{ Name = \"StiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StorSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"SysMain\"; StartupType = \"Automatic\" },\n      @{ Name = \"SystemEventsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"TabletInputService\"; StartupType = \"Manual\" },\n      @{ Name = \"TapiSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"TermService\"; StartupType = \"Automatic\" },\n      @{ Name = \"TextInputManagementService\"; StartupType = \"Automatic\" },\n      @{ Name = \"Themes\"; StartupType = \"Automatic\" },\n      @{ Name = \"TieringEngineService\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBrokerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TokenBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TrkWks\"; StartupType = \"Automatic\" },\n      @{ Name = \"TroubleshootingSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TrustedInstaller\"; StartupType = \"Manual\" },\n      @{ Name = \"UI0Detect\"; StartupType = \"Manual\" },\n      @{ Name = \"UdkUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UevAgentService\"; StartupType = \"Disabled\" },\n      @{ Name = \"UmRdpService\"; StartupType = \"Manual\" },\n      @{ Name = \"UnistoreSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserDataSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserManager\"; StartupType = \"Automatic\" },\n      @{ Name = \"UsoSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"VGAuthService\"; StartupType = \"Automatic\" },\n      @{ Name = \"VMTools\"; StartupType = \"Automatic\" },\n      @{ Name = \"VSS\"; StartupType = \"Manual\" },\n      @{ Name = \"VacSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VaultSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"W32Time\"; StartupType = \"Manual\" },\n      @{ Name = \"WEPHOSTSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"WFDSConMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WMPNetworkSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WManSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WPDBusEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"WSService\"; StartupType = \"Manual\" },\n      @{ Name = \"WSearch\"; StartupType = \"Automatic\" },\n      @{ Name = \"WaaSMedicSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WalletService\"; StartupType = \"Manual\" },\n      @{ Name = \"WarpJITSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WbioSrvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Wcmsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WcsPlugInService\"; StartupType = \"Manual\" },\n      @{ Name = \"WdNisSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiServiceHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiSystemHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WebClient\"; StartupType = \"Manual\" },\n      @{ Name = \"Wecsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WiaRpc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinDefend\"; StartupType = \"Automatic\" },\n      @{ Name = \"WinHttpAutoProxySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinRM\"; StartupType = \"Manual\" },\n      @{ Name = \"Winmgmt\"; StartupType = \"Automatic\" },\n      @{ Name = \"WlanSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpcMonSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnService\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpnUserService_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"XblAuthManager\"; StartupType = \"Manual\" },\n      @{ Name = \"XblGameSave\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxGipSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxNetApiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"autotimesvc\"; StartupType = \"Manual\" },\n      @{ Name = \"bthserv\"; StartupType = \"Manual\" },\n      @{ Name = \"camsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"cbdhsvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"cloudidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dcsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"defragsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"diagnosticshub.standardcollector.service\"; StartupType = \"Manual\" },\n      @{ Name = \"diagsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dmwappushservice\"; StartupType = \"Manual\" },\n      @{ Name = \"dot3svc\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdate\"; StartupType = \"Automatic\" },\n      @{ Name = \"edgeupdatem\"; StartupType = \"Manual\" },\n      @{ Name = \"embeddedmode\"; StartupType = \"Manual\" },\n      @{ Name = \"fdPHost\"; StartupType = \"Manual\" },\n      @{ Name = \"fhsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"gpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"hidserv\"; StartupType = \"Manual\" },\n      @{ Name = \"icssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"iphlpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"lfsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lltdsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lmhosts\"; StartupType = \"Manual\" },\n      @{ Name = \"mpssvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"msiserver\"; StartupType = \"Manual\" },\n      @{ Name = \"netprofm\"; StartupType = \"Manual\" },\n      @{ Name = \"nsi\"; StartupType = \"Automatic\" },\n      @{ Name = \"p2pimsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"p2psvc\"; StartupType = \"Manual\" },\n      @{ Name = \"perceptionsimulation\"; StartupType = \"Manual\" },\n      @{ Name = \"pla\"; StartupType = \"Manual\" },\n      @{ Name = \"seclogon\"; StartupType = \"Manual\" },\n      @{ Name = \"shpamsvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"smphost\"; StartupType = \"Manual\" },\n      @{ Name = \"spectrum\"; StartupType = \"Manual\" },\n      @{ Name = \"sppsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"ssh-agent\"; StartupType = \"Disabled\" },\n      @{ Name = \"svsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"swprv\"; StartupType = \"Manual\" },\n      @{ Name = \"tiledatamodelsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"tzautoupdate\"; StartupType = \"Disabled\" },\n      @{ Name = \"uhssvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"upnphost\"; StartupType = \"Manual\" },\n      @{ Name = \"vds\"; StartupType = \"Manual\" },\n      @{ Name = \"vm3dservice\"; StartupType = \"Automatic\" },\n      @{ Name = \"vmicguestinterface\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicheartbeat\"; StartupType = \"Manual\" },\n      @{ Name = \"vmickvpexchange\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicrdv\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicshutdown\"; StartupType = \"Manual\" },\n      @{ Name = \"vmictimesync\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvmsession\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvss\"; StartupType = \"Manual\" },\n      @{ Name = \"vmvss\"; StartupType = \"Manual\" },\n      @{ Name = \"wbengine\"; StartupType = \"Manual\" },\n      @{ Name = \"wcncsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefusersvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"wercplsupport\"; StartupType = \"Manual\" },\n      @{ Name = \"wisvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlpasvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wmiApSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"workfolderssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wscsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"wuauserv\"; StartupType = \"Manual\" },\n      @{ Name = \"wudfsvc\"; StartupType = \"Manual\" }\n  )\n  \n  foreach ($svc in $services) {\n      try {\n          Set-Service -Name $svc.Name -StartupType $svc.StartupType -ErrorAction Stop\n          Write-Output \"Set $($svc.Name) to $($svc.StartupType)\"\n      } catch {\n          Write-Warning \"Failed to set $($svc.Name): $_\"\n      }\n  }\n     "
            },
            ["set-time-utc"] = new Tweak
            {
                Name = "Set Time Utc",
                Description = "Sets the system time to UTC, Great for dual booting",
                ApplyScript = "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\" -Name \"RealTimeIsUniversal\" -Value 1 -Type DWord -Force",
                UnapplyScript = "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\" -Name \"RealTimeIsUniversal\" -Value 0 -Type DWord -Force"
            },
            ["ultimate-performance-plan"] = new Tweak
            {
                Name = "Ultimate Performance Plan",
                Description = "Enables And Applys The Windows Ultimate Powerplan for better performance",
                ApplyScript = "$ultimatePlan = powercfg -l | Select-String \"Ultimate Performance\"\n  \n  if (-not $ultimatePlan) {\n      Write-Host \"Ultimate Performance plan not found. Creating...\" \n      powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\n  } else {\n      Write-Host \"Ultimate Performance plan already exists.\" \n  }\n  \n  # Get the GUID of the Ultimate Performance plan\n  $ultimatePlanGUID = (powercfg -l | Select-String \"Ultimate Performance\").ToString().Split()[3]\n  \n  # Set it as the active plan\n  powercfg -setactive $ultimatePlanGUID\n  \n  Write-Host \"Ultimate Performance power plan is now active.\" ",
                UnapplyScript = "$balancedGUID = \"381b4222-f694-41f0-9685-ff5bb260df2e\"\n  \n  # check if the Balanced plan exists\n  $balancedExists = powercfg -l | Select-String $balancedGUID\n  \n  if ($balancedExists) {\n      powercfg -setactive $balancedGUID\n      Write-Host \"Balanced power plan is now active.\" \n  } else {\n      Write-Host \"Balanced power plan not found. Creating a new Balanced plan...\" \n      powercfg -duplicatescheme $balancedGUID\n      powercfg -setactive $balancedGUID\n      Write-Host \"Balanced power plan created and activated.\" \n  }"
            },
        };
    }
}
